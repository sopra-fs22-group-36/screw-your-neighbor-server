plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.diffplug.spotless" version "6.3.0"
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group = 'ch.uzh.ifi.hase.soprafs22'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(15))
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'io.projectreactor:reactor-test:3.4.15'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    maxParallelForks = 1
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}


jacoco {
    toolVersion = "0.8.6"
    reportsDirectory = layout.buildDirectory.dir("$buildDir/jacocoReportDir").get()
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        googleJavaFormat()
    }
}


sonarqube {
    properties {
        property "sonar.projectKey", "sopra-fs22-group-36_screw-your-neighbor-server"
        property "sonar.organization", "sopra-fs22-group-36"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", ["$buildDir/jacocoReportDir/test/jacocoTestReport.xml"]
    }
}

project.tasks["sonarqube"].dependsOn {
    test
}

defaultTasks 'bootJar', 'build'
