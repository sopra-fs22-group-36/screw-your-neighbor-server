@startuml
'https://plantuml.com/component-diagram

package "Client_Frontend" {
    folder "views" {
        [Lobby]
        [Game]
        [Match]
        [Player]
    }
    folder "ui" {
        [Button]
        [Cards]
    }
}
note bottom of Client_Frontend: React components\n-Material UI\n- React Router\n-Grommet\n-Video

package "External Video Chat API" {
    API - [Video Framework]
}

package "Server - Backend" {
    folder "Entity_Layer" {
        [Entity Player]
        [Entity Lobby]
        [Entity Participation]
    }
    folder "Game_Logic" {
            [Player State Pattern]
        [Game State Pattern]
    }
    note top of Game_Logic: Game Logic with two state machines\n more information in the class diagram
    folder "Repositories" {
        [Repository Game]
        [Repository Lobby]
        [Repository Match]
        [Repository Player]
        [Repository Participation]
    }
}

node "JPA" {
    [JPA API]
}
database "H2 Hibernate" {
  folder "Database" {
    [Game Repository]
  }
}

node "SpringDataRest" {
    [SpringDataREST]
}
note top of SpringDataRest: Spring Data Rest framework\nReplace controller and service components

[Lobby] <--> [Game]
[Player] <--> [Lobby]
[Player] <--> [Game]
[Match] <--> [Game]
views <--> ui


[Repository Game] <..> [JPA API]
[Repository Player] <..> [JPA API]
[Repository Match] <..> [JPA API]
[Repository Lobby] <..> [JPA API]
[Repository Participation] <..> [JPA API]
[JPA API] <..> [Game Repository]

Client_Frontend <..> SpringDataREST
Entity_Layer <..> SpringDataREST
views <--> API

[Repository Participation] <--> [Entity Participation]
[Entity Participation] <--> Game_Logic
[Game State Pattern] <--> [Player State Pattern]

Entity_Layer <--> Game_Logic

[Entity Player] <--> [Repository Player]
[Entity Lobby]  <--> [Repository Lobby]

@enduml
